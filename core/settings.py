"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
os.environ['TZ'] = 'America/New_York'
import environ
import dj_database_url
from decouple import config


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent



env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

ENVIRONMENT= env('ENVIRONMENT', default='production')
SERVICE_ACCOUNT_FILE = os.path.join(BASE_DIR, 'credentials', 'service_account.json')



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-+#n8ro4q#50(m@sw__9napjvs1$#-77jto8w8$&p_*ci1#jm_q'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'linetrendy.saasiskey.com',  'linetrendy-production.up.railway.app', 'linetrendy.com' ]



CSRF_TRUSTED_ORIGINS = [
    "http://127.0.0.1:8000",
    "http://localhost:8000",
    'https://linetrendy.com',
    'https://linetrendy-production.up.railway.app',

]




# Application definition
INSTALLED_APPS = [
    "unfold",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # Allauth
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    # Providers
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.facebook',

    'linetrendy',
    'users',
    'django_recaptcha',
    'widget_tweaks'


]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'linetrendy.context_processors.cart_count',
                'linetrendy.context_processors.category_list',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'



AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # Default
    'allauth.account.auth_backends.AuthenticationBackend',  # Allauth
]
# Redirect after login/logout
ACCOUNT_FORMS = {
    'signup': 'users.forms.CustomSignupForm',
}


LOGIN_URL =  '/users/account/login/'  
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'


# Use new settings
ACCOUNT_LOGIN_METHODS = {'email'}       # replaces ACCOUNT_AUTHENTICATION_METHOD
ACCOUNT_SIGNUP_FIELDS = ['email*', 'password1*', 'password2*']  # replaces ACCOUNT_EMAIL_REQUIRED & ACCOUNT_USERNAME_REQUIRED
ACCOUNT_USER_MODEL_USERNAME_FIELD = None # still correct for removing username
ACCOUNT_EMAIL_VERIFICATION = 'none'



ACCOUNT_ADAPTER = "users.adapters.CustomAccountAdapter"




SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': ['profile', 'email'],
        'AUTH_PARAMS': {'access_type': 'online'},
    }
}

AUTH_USER_MODEL = 'users.CustomUser'



SITE_DOMAIN = "https://linetrendy.saasiskey.com"



USE_TZ = True
TIME_ZONE = 'America/New_York'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DATABASE_URL'),
        'PORT': '5432', 
    }
}


POSTGRES_LOCALLY= False
if ENVIRONMENT == 'production' or POSTGRES_LOCALLY == False:
    DATABASES['default'] = dj_database_url.parse(config('DATABASE_URL'))


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
STATIC_URL = '/static/'

STATIC_ROOT = BASE_DIR / 'staticfiles' 

STATICFILES_DIRS = [
    BASE_DIR / 'static',  
]

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



# Initialize
# Initialise environment with defaults
env = environ.Env(
    ENVIRONMENT=(str, 'development'),  # default to development
)

# Read .env file
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Get environment and normalize to lowercase
ENVIRONMENT = env('ENVIRONMENT').lower()


# Set reCAPTCHA keys
if ENVIRONMENT == "production":
    RECAPTCHA_PUBLIC_KEY = env('RECAPTCHA_PUBLIC_KEY_PROD')
    RECAPTCHA_PRIVATE_KEY = env('RECAPTCHA_PRIVATE_KEY_PROD')
  
else:
    RECAPTCHA_PUBLIC_KEY = env('RECAPTCHA_PUBLIC_KEY_DEV', default='')
    RECAPTCHA_PRIVATE_KEY = env('RECAPTCHA_PRIVATE_KEY_DEV', default='')
    

# Optional: sanity check for production
if ENVIRONMENT == "production" and (not RECAPTCHA_PUBLIC_KEY or not RECAPTCHA_PRIVATE_KEY):
    raise RuntimeError("Production reCAPTCHA keys are missing!")
    #print("Running in development mode")



# Example for service account file
SERVICE_ACCOUNT_FILE = os.path.join(BASE_DIR, 'credentials', 'service_account.json')

#stp api key
STRIPE_PUBLIC_KEY = env("STRIPE_PUBLIC_KEY")
STRIPE_SECRET_KEY = env("STRIPE_SECRET_KEY")



#Email setup
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False  # make sure this stays False when TLS is True
EMAIL_HOST_USER = 'Linetrendyllc@gmail.com'
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')  # your Gmail app password (not your normal login!)
DEFAULT_FROM_EMAIL = 'Linetrendy <linetrendyllc@gmail.com>'



